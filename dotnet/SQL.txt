#################################################################################################################################
	.NET - SQL
#################################################################################################################################

USANDO SQLCLIENT

Tools/Connect to DB

Select Project > Manage NuGet Packages.
In NuGet Package Manager, select the Browse tab, then search for and select Microsoft.Data.SqlClient.
On the Microsoft.Data.SqlClient page, select Install.

...

try 
{ 
    SqlConnectionStringBuilder builder = new SqlConnectionStringBuilder();
    builder.DataSource = "<your_server>.database.windows.net"; 
    builder.UserID = "<your_username>";            
    builder.Password = "<your_password>";     
    builder.InitialCatalog = "<your_database>";

    using (SqlConnection connection = new SqlConnection(builder.ConnectionString))
    {
        Console.WriteLine("\nQuery data example:");
        Console.WriteLine("=========================================\n");

        String sql = "SELECT name, collation_name FROM sys.databases";

        using (SqlCommand command = new SqlCommand(sql, connection))
        {
            connection.Open();
            using (SqlDataReader reader = command.ExecuteReader())
            {
                while (reader.Read())
                    {
                        Console.WriteLine("{0} {1}", reader.GetString(0), reader.GetString(1));
                    }
            }
        }                    
    }
}
catch (SqlException e)
{
    Console.WriteLine(e.ToString());
}


new SqlCommand(sql, connection).ExecuteNonQuery();
MessageBox.Show("Los datos se guardaron correctamente");
connection.Close();


#################################################################################################################################

USANDO MIGRATIONS

Instalar    Microsoft.EntityFrameworkCore    y    Microsoft.EntityFrameworkCore.SqlServer
Instalar    Microsoft.EntityFrameworkCore.Tools
 y en la consola de NuGet:	Add-Migration InitialCreate       para que se creen las clases Migration


Agregar a appsettings.json:
  "ConnectionStrings": {
    "DefaultConnectionString": "Server=localhost;Initial Catalog=AngularDotnet;Persist Security Info=False;User ID=ghp2;Password=ghpghpghpghp;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=True;Connection Timeout=30;"
  }

Y a Startup.cs en ConfigureServices:
	string connection = ConfigurationExtensions.GetConnectionString(this.Configuration, "DefaultConnectionString");
        services.AddDbContext<MyDBContext>(options => options.UseSqlServer(connection));

Ahora desde la consola de NuGet:
	Update-Database                   para que se cree una DB desde los modelos




