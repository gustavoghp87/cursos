High availability: Depending on the service-level agreement (SLA) that you choose, your cloud-based apps can provide a continuous user experience with no apparent downtime, even when
 things go wrong.

Scalability: Apps in the cloud can scale vertically and horizontally:

Scale vertically to increase compute capacity by adding RAM or CPUs to a virtual machine.
 Scaling horizontally increases compute capacity by adding instances of resources, such as adding VMs to the configuration.
 Elasticity: You can configure cloud-based apps to take advantage of autoscaling, so your apps always have the resources they need.

Agility: Deploy and configure cloud-based resources quickly as your app requirements change.

Geo-distribution: You can deploy apps and data to regional datacenters around the globe, thereby ensuring that your customers always have the best performance in their region.

Disaster recovery: By taking advantage of cloud-based backup services, data replication, and geo-distribution, you can deploy your apps with the confidence that comes from knowing that
 your data is safe in the event of disaster.


-IaaS: This cloud service model is the closest to managing physical servers; a cloud provider will keep the hardware up-to-date, but operating system maintenance and network
 configuration is up to you as the cloud tenant.
 No CapEx. Agility. Management. Consumption-based model. Skills. Cloud benefits. Flexibility

-PaaS: This cloud service model is a managed hosting environment. The cloud provider manages the virtual machines and networking resources, and the cloud tenant deploys their
 applications into the managed hosting environment.
 Platform limitations: There can be some limitations to a cloud platform that might affect how an application runs. When you're evaluating which PaaS platform is best suited for a
 workload, be sure to consider any limitations in this area.

-SaaS: In this cloud service model, the cloud provider manages all aspects of the application environment, such as virtual machines, networking resources, data storage, and applications.
 The cloud tenant only needs to provide their data to the application managed by the cloud provider.
 Disadvantage: Software limitations. There can be some limitations to a software application that might affect how users work. Because you're using as-is software, you don't have
 direct control of features.




AZURE

Organizing structure for resources in Azure, which has four levels: management groups, subscriptions, resource groups, and resources.

-Resources: Resources are instances of services that you create, like virtual machines, storage, or SQL databases.

-Resource groups: Resources are combined into resource groups, which act as a logical container into which Azure resources like web apps, databases, and storage accounts are deployed and
 managed.

-Subscriptions: A subscription groups together user accounts and the resources that have been created by those user accounts. For each subscription, there are limits or quotas on the
 amount of resources that you can create and use. Organizations can use subscriptions to manage costs and the resources that are created by users, teams, or projects.

-Management groups: These groups help you manage access, policy, and compliance for multiple subscriptions. All subscriptions in a management group automatically inherit the conditions
 applied to the management group.


Availability zones are physically separate datacenters within an Azure region. Each availability zone is made up of one or more datacenters equipped with independent power, cooling, and
 networking. An availability zone is set up to be an isolation boundary. If one zone goes down, the other continues working. Availability zones are connected through high-speed, private
 fiber-optic networks.

Availability zones are primarily for VMs, managed disks, load balancers, and SQL databases. Azure services that support availability zones fall into three categories:

-Zonal services: You pin the resource to a specific zone (for example, VMs, managed disks, IP addresses).

-Zone-redundant services: The platform replicates automatically across zones (for example, zone-redundant storage, SQL Database).

-Non-regional services: Services are always available from Azure geographies and are resilient to zone-wide outages as well as region-wide outages.



















