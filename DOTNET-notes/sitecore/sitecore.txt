
renderizar ítem:        <div> @Html.Sitecore().Field("Title") </div>    tiene un segundo parámetro que es el path pero usa el default

Creado en layouts:
renderizar componente:  <div> @Html.Sitecore().ViewRendering("Views/Shared/Contents.cshtml") </div>      pero no es bueno usar el path

Creado en renderings un nuevo ítem que apunte al .cshtml anterior:
renderizar componente:  <div> @Html.Sitecore().Rendering("{JKB234J-KJ23324-57KN456KJN5}") </div>




<div> @Html.Sitecore().Placeholder("main") </div>




#################################################################################################################################


​https://sitecoredev9/sitecore/admin/cache.aspx


#################################################################################################################################

alojado en C://inetpub
sitios en /wwwroot/projecto1   etc

templates en Templates/User Defined/ por buena práctica
items en /Content/Home/
opciones para droplists en /Content/Home/Settings/[Name]/



opción: layout se corresponde con una url, agregar un mvc layout, asignarle una carpeta en view, crea el .cshtml
mejor crear desde visual studio y después compilar
url => item => presentation detail

@Html.Sitecore().Field("Title");

Component: @Html.Sitecore().ViewRendering("/Views/Shared/Content.cshtml");
o, mejor, crear un ítem en Layouts/Shared/ con el mismo nombre (Main Layout) y linkear el archivo .cshtml en el Content
 y @Html.Sitecore().Rendering("{id}");

o Controller Rendering en vez de View Rendering haciendo un controller en visual studio

versioned: un texto para cada idioma y versión
unversioned: un texto para cada versión dentro del idioma
shared: texto único para todo idioma y versión


#################################################################################################################################

URL
C://inetpub/wwwroot/example/Website/App_Config/Sitecore.config
buscar <sites> el name website
buscar <linkManager para ver la clase de Sitecore que controla el direccionamiento,
 var item = RenderingContext.Current.ContextItem;
 usar la ruta relativa con @Sitecore().Links.LinkManager.GetUrlItem(item)
 usar la ruta absoluta con @Sitecore().Links.LinkManager.GetUrlItem(item, options)
	var options = Sitecore.Links.LinkManager.GetDefaultUrlOptions();
	options.AlwaysIncludeServerUrl = true;
 ver item.Parent, item.Children (List<Item>) y item.Axes.GetAncestors(); GetDescendants();


#################################################################################################################################



