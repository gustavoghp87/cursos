################
##### LINQ #####
################


using System.Linq
...
IEnumerable<int> list = from d in arreglo orderby d select d;                              ordena de menor a mayor
IEnumerable<int> list = from d in arreglo orderby d select d;
IEnumerable<Object> list = from d in arreglo orderby d.AtributoInt select d;
Object obj = (from d in arreglo where d.Atributo=="atributo" select d).FirstOrDefault();

var numbers1 = new int[] { 1, 2, 3, 4, 5, 6, 7 };
var numbers2 = new int[] { 6, 7, 8, 9, 10 };
var numbersUnion = numbers1.Union(numbers2).ToList();      no repite

ver Zip, Join, All, SelectMany

Pagination:		(from d in listX orderby d.Age select d.Name).Skip(10).Take(5).ToList();         saltea los primeros 10 y toma del 11 al 15

Union:                  (from d in listX select d.Name).Union(from d in listTextOnly select d).OrderBy(d=>d).ToList();


Limit: Take(10)

string[] nombre1 = { "Alba", "Felipa", "Eusebio", "Farid", "Donald", "Alvaro", "NicolÃ¡s" };
string[] apellido1 = { "Ruiz", "Sarmiento", "Uribe", "Maduro", "Trump", "Toledo", "Herrera" };
string[] nombre2 = { "Freddy", "Anabel", "Rick", "Murty", "Silvana", "Diomedes", "Nicomedes", "Teodoro" };

var listaAlumnos = from n1 in nombre1
                   from n2 in nombre2
                   from a1 in apellido1
                   select new Alumno {CursoId = curso.Id, Nombre = $"{n1} {n2} {a1}"};

return listaAlumnos.OrderBy((al) => al.Id).Take(cantidad).ToList();


